from kedro.pipeline import Pipeline, node
from .nodes import split_mnemonic_codes_df, train_model_with_mnemonic_codes, evaluate_model_with_mnemonic_codes, plot_metrics, plot_metrics_save_figures


def create_pipeline(**kwargs):
    return Pipeline(
        [
            node(
                func=split_mnemonic_codes_df,
                inputs="merged_and_shuffled_most_common_mnemonic_codes_df_binary_bert",
                outputs=["train_texts", "val_texts", "train_labels", "val_labels", "train_filenames", "val_filenames"],
                name="split_data_node",
            ),
            node(
                func=train_model_with_mnemonic_codes,
                inputs=["train_texts", "val_texts", "train_labels", "val_labels"],
                outputs=["trained_bert_model", "metrics_callback"],
                name="train_model_node",
            ),
            node(
                func=evaluate_model_with_mnemonic_codes,
                inputs=["trained_bert_model", "val_texts", "val_labels", "val_filenames", "merged_and_shuffled_most_common_mnemonic_codes_df_binary_bert"],
                outputs=["accuracy", "binary_bert_to_be_malware_probability"],
                name="evaluate_model_node",
            ),
            node(
                func=plot_metrics_save_figures,
                inputs=["metrics_callback"],
                outputs=['binary_bert_loss_figure', 'binary_bert_acc_figure'],
                name="plot_graphs_save_figures_binary_bert_result"
            ),
            node(
                func=plot_metrics,
                inputs=["metrics_callback"],
                outputs=['fig_loss', 'fig_acc'],
                name="plot_graphs_binary_bert_result"
            )
        ]
        
    )