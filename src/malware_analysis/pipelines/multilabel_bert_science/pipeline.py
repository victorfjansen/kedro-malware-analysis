from kedro.pipeline import Pipeline, node
from .nodes import split_mnemonic_codes_df, train_model_with_mnemonic_codes, evaluate_model_with_mnemonic_codes, plot_metrics_save_figures, plot_confusion_matrix

def create_pipeline(**kwargs):
    return Pipeline(
        [
            node(
                func=split_mnemonic_codes_df,
                inputs="merged_and_shuffled_multilabel_mnemonic_codes_df",
                outputs=["train_multilabel_texts", "val_multilabel_texts", "train_multilabel_labels", "val_multilabel_labels"],
                name="split_multilabel_data_node",
            ),
            node(
                func=train_model_with_mnemonic_codes,
                inputs=["train_multilabel_texts", "val_multilabel_texts", "train_multilabel_labels", "val_multilabel_labels"],
                outputs=["trained_multilabel_bert_model", "multi_label_bert_metrics_callback"],
                name="train_multilabel_model_node",
            ),
            node(
                func=evaluate_model_with_mnemonic_codes,
                inputs=["trained_multilabel_bert_model", "val_multilabel_texts", "val_multilabel_labels"],
                outputs=["multilabel_bert_correct_labels", "multilabel_bert_predicted_labels"],
                name="evaluate_multilabel_model_node",
            ),
            node(
                func=plot_metrics_save_figures,
                inputs="multi_label_bert_metrics_callback",
                outputs="multilabel_bert_eval_metrics",
                name="plot_metrics_multilabel_model_node",
            ),
            node(
                func=plot_confusion_matrix,
                inputs=["multilabel_bert_correct_labels", "multilabel_bert_predicted_labels"],
                outputs="multilabel_bert_confusion_matrix",
                name="plot_conf_matrix_multilabel_model_node",
            ),
        ]
    )